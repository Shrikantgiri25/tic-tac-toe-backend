"""
Django settings for game_backend project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import environ
import os
from datetime import timedelta

env = environ.Env(
    # Set casting and default values
    DEBUG=(bool, False),
    SECRET_KEY=(str, 'django-insecure-waa62o+0-gj%rh-r4p$llwv8fpyinw_$&vb31vd0@%-p1lj#^#'),
    ALLOWED_HOSTS=(list, ['localhost', '127.0.0.1', 'humble-enthusiasm-production.up.railway.app']),
    DB_ENGINE=(str, 'django.db.backends.postgresql'),
    DB_NAME=(str, 'railway'),
    DB_USER=(str, 'postgres'),
    DB_PASSWORD=(str, 'HvRvthrByILmzYSUNVwMqyfXnATYqgJv'),
    DB_HOST=(str, 'postgres.railway.internal'),
    DB_PORT=(int, 5432),
    # ðŸ’¡ CORRECT: Using plural CORS_ALLOWED_ORIGINS (matches CORS_ALLOWED_ORIGINS setting)
    CORS_ALLOWED_ORIGINS=(list, ['http://localhost:5173', 'http://127.0.0.1:5173', 'https://humble-enthusiasm-production.up.railway.app']),
    FRONTEND_URL=(str, 'http://localhost:5173'), # Changed to 'str' if used as a single base URL
    REDIS_URL=(str, 'redis://default:qOPtptfCHUeiinQwlUluYdxjLJjVgtlb@redis.railway.internal:6379'), # Added default for Redis
    USER_THROTTLE_LIMIT=(int, 1000), # Added explicit default casting
    ANON_THROTTLE_LIMIT=(int, 1000), # Added explicit default casting
    JWT_TOKEN_LIFETIME=(int, 100),   # Added explicit default casting
    JWT_REFRESH_TOKEN_LIFETIME=(int, 100), # Added explicit default casting
    ROTATE_REFRESH_TOKEN=(bool, True), # Added explicit default casting
    BLACKLIST_AFTER_ROTATION=(bool, True), # Added explicit default casting
)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Read .env file if it exists
env_file = BASE_DIR / ".env"
if env_file.exists():
    environ.Env.read_env(env_file)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env("DEBUG")

ALLOWED_HOSTS = env.list("ALLOWED_HOSTS")


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "accounts",
    "channels",
    "game",
    'rest_framework_simplejwt.token_blacklist',
    "corsheaders",
    'drf_spectacular',
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    'whitenoise.middleware.WhiteNoiseMiddleware',
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "game_backend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "frontend" / "build"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "game_backend.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': env("DB_ENGINE"),
        'NAME': env("DB_NAME"),
        'USER': env("DB_USER"),
        'PASSWORD': env("DB_PASSWORD"),
        'HOST': env("DB_HOST"),
        'PORT': env("DB_PORT"),
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'

# Where collectstatic will put all files
STATIC_ROOT = BASE_DIR / "staticfiles"

# React build static files - only add if directory exists
import os
frontend_static_dir = BASE_DIR / "frontend" / "build" / "static"
STATICFILES_DIRS = [
    frontend_static_dir,
] if os.path.exists(frontend_static_dir) else []

# Add frontend build directory to static files finders
WHITENOISE_USE_FINDERS = True
WHITENOISE_AUTOREFRESH = True

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Throttle Classes and Authentication settings
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "DEFAULT_THROTTLING_CLASS": [
        "rest_framework.throttling.UserRateThrottle",
        "rest_framework.throttling.AnonRateThrottle",
    ],
    "DEFAULT_THROTTLE_RATES": {
        "user": env("USER_THROTTLE_LIMIT"),
        "anon": env("ANON_THROTTLE_LIMIT"),
    },
    "DEFAULT_RENDERER_CLASSES": ("rest_framework.renderers.JSONRenderer",),
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}


SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(hours=env("JWT_TOKEN_LIFETIME")),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=env("JWT_REFRESH_TOKEN_LIFETIME")),
    "ROTATE_REFRESH_TOKENS": env("ROTATE_REFRESH_TOKEN"),
    "BLACKLIST_AFTER_ROTATION": env("BLACKLIST_AFTER_ROTATION"),
}

FRONTEND_URL = env("FRONTEND_URL")

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [env('REDIS_URL')],
        },
    },
}

# CORS Settings
# ðŸš€ FIX: Using plural "CORS_ALLOWED_ORIGINS" to match the variable name defined at the top
CORS_ALLOWED_ORIGINS = env.list("CORS_ALLOWED_ORIGINS")

CORS_ALLOW_CREDENTIALS = True

AUTH_USER_MODEL = 'accounts.User'

SPECTACULAR_SETTINGS = {
    'TITLE': 'Tic Tac Toe Game API',
    'DESCRIPTION': 'API for multiplayer Tic Tac Toe game with real-time WebSocket support',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
    'COMPONENT_SPLIT_REQUEST': True,
    'SECURITY': [
        {
            'Bearer': {
                'type': 'http',
                'scheme': 'bearer',
                'bearerFormat': 'JWT',
            }
        }
    ],
    'SECURITY_REQUIREMENTS': [
        {
            'Bearer': []
        }
    ],
}

ROOT_URLCONF = 'game_backend.urls'
ASGI_APPLICATION = 'game_backend.asgi.application'
WSGI_APPLICATION = 'game_backend.wsgi.application'

# ðŸš€ FIX: Using plural "CORS_ALLOWED_ORIGINS" to match the variable name defined at the top
CSRF_TRUSTED_ORIGINS = env.list("CORS_ALLOWED_ORIGINS")